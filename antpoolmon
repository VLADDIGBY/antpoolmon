#!/usr/bin/env python3

import requests
import hmac
import hashlib
import sys
import yaml
from os.path import expanduser

try:
    nonce = 110

    with open(expanduser("~") + "/.antpoolmon.conf", "r") as cfile:
        cnf = yaml.load(cfile)
        username = cnf['username']
        key = cnf['key']
        secret = cnf['secret']

    message = bytearray(username + key + str(nonce), 'utf-8')
    signature = hmac.new(
        bytearray(secret, 'utf-8'),
        msg=message,
        digestmod=hashlib.sha256).hexdigest().upper()

    req = requests.post(
        "https://antpool.com/api/poolStats.htm",
        data={'key': key, 'nonce': str(nonce), 'signature': signature})

    resp = req.json()

    b_minutes, b_seconds = divmod(int(resp['data']['estimateTime']), 60)
    b_hours, b_minutes = divmod(b_minutes, 60)

    r_minutes, r_seconds = divmod(int(resp['data']['currentRound']), 60)
    r_hours, r_minutes = divmod(r_minutes, 60)

    print("\nPool Status       : {}".format(resp['data']['poolStatus']))
    print(
        "Pool Hashrate     : {:.2f} Ph/s".format(
            float(resp['data']['poolHashrate']) / 1000000000))
    print(
        "Network Difficulty: {:,}".format(float(resp['data']['networkDiff'])))
    print(
        "Active Workers    : {:,}".format(
            int(resp['data']['activeWorkerNumber'])))
    print("Block Estimate    : {}:{}:{}".format(b_hours, b_minutes, b_seconds))
    print("Current Round     : {}:{}:{}".format(r_hours, r_minutes, r_seconds))
    print(
        "Total Shares      : {:,}".format(
            int(resp['data']['totalShareNumber'])))
    print(
        "Total Blocks      : {:,}\n\n".format(
            int(resp['data']['totalBlockNumber'])))

    """ Get account details """

    req = requests.post(
        "https://antpool.com/api/account.htm",
        data={'key': key, 'nonce': str(nonce), 'signature': signature})
    acc = req.json()

    print("Earnings:")

    print("24 Hrs: {:<14} Total: {:<14} Paid Out: {:<14} Balance: {}".format(
            acc['data']['earn24Hours'],
            acc['data']['earnTotal'],
            acc['data']['paidOut'],
            acc['data']['balance']))

    """ Get hashrate by workers """

    print("\n\n{0:20} {1:>9} {2:>9} {3:>9} ".format(
        "Workers", "Last 10M", "Last 30M", "Last 1H"), end="")
    print("{0:>9} {1:>9} {2:>9} {3:>9} {4:>9}".format(
        "Last 1D", "Accepted", "Stale", "Duplicate", "Other"))
    print("-" * 100)

    workers = requests.post(
        "https://antpool.com/api/workers.htm",
        data={'key': key, 'nonce': str(nonce), 'signature': signature}).json()

    for w in workers['data']['rows']:
        print("{0:20} {1:>9.2f} {2:>9.2f} {3:>9.2f} {4:>9.2f}".format(
            w['worker'],
            float(w['last10m']) / 1000,
            float(w['last30m']) / 1000,
            float(w['last1h']) / 1000,
            float(w['last1d']) / 1000,
            ), end="")

        print(" {0:>9} {1:>9} {2:>9} {3:>9}".format(
            w['accepted'],
            w['stale'],
            w['dupelicate'],
            w['other']))


except OSError as ex:
    print("Error: {}".format(ex), file=sys.stderr)
    sys.exit(1)

except yaml.YAMLError:
    print("Please make sure the file .antpoolmon.conf exists in your home ")
    print("directory and contains the following the following:")
    print('username: "<username>"\nkey: "<key>"\nsecret: "<secret>"\n')
    sys.exit(2)
